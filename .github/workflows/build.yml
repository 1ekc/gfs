name: Build Documentation

on:
  workflow_dispatch:
  push:

permissions:
  contents: write

jobs:
  documentation:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Install Windows Dependencies
        run: |
          choco install ffmpeg pngquant imagemagick git-lfs nodejs -y --no-progress
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv
          ffmpeg -version
          pngquant --version
          magick --version
          git lfs version
          node --version

      - name: Install vgmstream
        run: |
          Invoke-WebRequest -Uri "https://github.com/vgmstream/vgmstream-releases/releases/download/nightly/vgmstream-win64.zip" -OutFile "vgmstream.zip"
          Expand-Archive -Path "vgmstream.zip" -DestinationPath "bin" -Force
          Remove-Item -Path "vgmstream.zip"
          echo "$PWD\bin" | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8

      - name: Restore Resources Cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: |
            unpack/downloader/output
          key: gf-resources-${{ runner.os }}-${{ github.sha }}
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
      - name: Setup Python Environment
        run: |
          cd unpack
          pdm install
          .\.venv\Scripts\Activate.ps1
          pip install -r downloader/requirements.txt
      - name: Download Resources
        if: steps.restore-cache.outputs.cache-hit != 'true'
        env:
          GD_DATA: ${{ secrets.GD_DATA }}
        run: |
          # Явная активация окружения
          .\.venv\Scripts\activate
          cd unpack/downloader
          python -c "import sys; print(sys.path)"  # Debug paths
          python downloader.py --folder-id "1YPAEYsvjs8UjMLNogu_VtUIWW0rr4-L
      - name: Cache Downloaded Resources
        uses: actions/cache/save@v4
        with:
          path: |
            unpack/downloader/output
          key: ${{ steps.restore-gf-downloader-resources.outputs.cache-primary-key }}
      - name: Restore Cached Resources (images)
        id: restore-image-resources
        uses: actions/cache/restore@v4
        with:
          path: |
            unpack/images
          key: gf-image-resources
      - name: Unpack images
        run: |
          cd unpack
          .\.venv\Scripts\Activate.ps1
          python tests/test_backgrounds.py
          python tests/test_characters.py
      - name: Cache Resources (images)
        uses: actions/cache/save@v4
        with:
          path: |
            unpack/images
          key: ${{ steps.restore-image-resources.outputs.cache-primary-key }}
      - name: Restore Cached Resources (audio)
        id: restore-audio-resources
        uses: actions/cache/restore@v4
        with:
          path: |
            unpack/audio
          key: gf-audio-resources
      - name: Unpack audio
        run: |
          cd unpack
          .\.venv\Scripts\Activate.ps1
          python tests/test_audio.py
      - name: Cache Resources (audio)
        uses: actions/cache/save@v4
        with:
          path: |
            unpack/audio
          key: ${{ steps.restore-audio-resources.outputs.cache-primary-key }}
      - name: Unpack resources
        run: |
          cd unpack
          .\.venv\Scripts\Activate.ps1
          python -m gfunpack downloader/output -o .
      - name: Log Disk Space
        run: df -h
      - name: Move Resources
        run: |
          cd unpack
          cp audio/audio.json images/backgrounds.json images/characters.json stories/stories.json stories/chapters.json ../src/assets
          mv audio ../public
          mv images ../public
          mv stories ../public
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0
          run_install: false
      - name: Setup PNPM Workspace
        run: |
          pnpm install
      - name: Build Site
        run: |
          pnpm build-index
          pnpm build
#      - name: Publish to Cloudflare Pages
#        uses: cloudflare/pages-action@v1
#        with:
#          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
#          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME  }}
#          directory: dist