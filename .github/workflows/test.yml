name: Run Audio Script

on:
  workflow_dispatch:
  push:

jobs:
  run-audio:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure system encoding
        run: |
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          chcp 65001 | Out-Null
          git config --global core.quotepath false
          $env:PYTHONUTF8 = "1"
          $env:LC_ALL = "C.UTF-8"

      - name: Install Windows Dependencies
        run: |
          choco install ffmpeg pngquant imagemagick git-lfs nodejs -y --no-progress
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv
          ffmpeg -version
          pngquant --version
          magick --version
          git lfs version
          node --version

      - name: Setup Git LFS
        run: |
          git lfs install
          git lfs track "*.wav" "*.mp3" "*.png" "*.jpg" "*.webp" "*.zip"
          git add .gitattributes

      - name: Install vgmstream
        run: |
          Invoke-WebRequest -Uri "https://github.com/vgmstream/vgmstream-releases/releases/download/nightly/vgmstream-win64.zip" -OutFile "vgmstream.zip"
          Expand-Archive -Path "vgmstream.zip" -DestinationPath "bin" -Force
          Remove-Item -Path "vgmstream.zip"
          echo "$PWD\bin" | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8

      - name: Setup Python Environment
        run: |
          python -m pip install --upgrade pip
          pip install pdm
          cd unpack
          pdm config venv.in_project true
          pdm install
          .\.venv\Scripts\activate
          pip install pyjson5
          pip install -r downloader/requirements.txt

#      - name: Restore Cached Resources
#        id: restore-gf-downloader-resources
#        uses: actions/cache/restore@v4
#        with:
#          path: |
#            unpack/downloader/output
#          key: gf-downloader-resources-${{ runner.os }}
#
#      - name: Download Resources (if cache missed)
#        if: steps.restore-gf-downloader-resources.outputs.cache-hit != 'true'
#        env:
#          GD_DATA: ${{ secrets.GD_DATA }}
#
#        run: |
#          cd unpack/downloader
#          if (!(Test-Path "config.json5")) {
#            Write-Error "Файл config.json5 не найден!"
#            exit 1
#          }
#          python downloader.py --folder-id "1YPAEYsvjs8UjMLNogu_VtUIWW0rr4-Ls"

      - name: Verify tools
        run: |
          ffmpeg -version
          vgmstream-cli -V
          Write-Host "Current PATH: $env:PATH"

      - name: Verify files exist
        run: |
          if (-not (Test-Path "unpack/downloader/output/AVG.acb.dat")) {
              Write-Host "::error::Missing AVG.acb.dat in downloader/output"
              exit 1
          }

      - name: Clean previous audio output
        run: |
          if (Test-Path "unpack/audio") {
              Remove-Item -Path "unpack/audio" -Recurse -Force
          }

      - name: Run audio tests
        run: |
          cd unpack
          .\.venv\Scripts\activate
          python tests/test_audio.py

      - name: Verify audio output
        run: |
          if (-not (Test-Path "unpack/audio/audio.json")) {
              Write-Host "::error::Audio processing failed - no output file"
              exit 1
          }
          Write-Host "Audio processing completed successfully"