name: Run Audio Script

on:
  workflow_dispatch:
  push:

jobs:
  run-audio:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure system encoding
        run: |
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          chcp 65001 | Out-Null
          git config --global core.quotepath false
          $env:PYTHONUTF8 = "1"
          $env:LC_ALL = "C.UTF-8"

      - name: Install Windows Dependencies
        run: |
          choco install ffmpeg -y --no-progress
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv

      - name: Install vgmstream (reliable method)
        run: |
          # Создаем директорию для vgmstream
          $vgmDir = "C:\vgmstream"
          New-Item -ItemType Directory -Path $vgmDir -Force

          # Пробуем разные источники для скачивания vgmstream
          $sources = @(
              "https://www.files.vgmstream.org/win64/vgmstream-win64.zip",
              "https://github.com/vgmstream/vgmstream-releases/releases/download/nightly/vgmstream-win64.zip",
              "https://github.com/vgmstream/vgmstream/releases/download/r1882/vgmstream-win64.zip"
          )

          $success = $false
          foreach ($source in $sources) {
              try {
                  Write-Host "Trying to download from $source"
                  Invoke-WebRequest -Uri $source -OutFile "$vgmDir\vgmstream.zip" -ErrorAction Stop
                  $success = $true
                  break
              } catch {
                  Write-Host "Failed to download from $source"
                  Write-Host $_.Exception.Message
              }
          }

          if (-not $success) {
              Write-Host "::error::All download attempts failed"
              exit 1
          }

          # Распаковываем архив
          Expand-Archive -Path "$vgmDir\vgmstream.zip" -DestinationPath $vgmDir -Force
          Remove-Item -Path "$vgmDir\vgmstream.zip" -Force

          # Добавляем в PATH
          $env:PATH = "$vgmDir;$env:PATH"
          echo "##[add-path]$vgmDir"

          # Проверяем установку
          vgmstream-cli -V
          if ($LASTEXITCODE -ne 0) {
              Write-Host "::error::vgmstream-cli verification failed"
              exit 1
          }

      - name: Verify tools
        run: |
          Write-Host "=== Tool versions ==="
          ffmpeg -version
          vgmstream-cli -V
          
          Write-Host "=== PATH contents ==="
          $env:PATH -split ';' | Where-Object { $_ -ne '' } | ForEach-Object { Write-Host $_ }

          Write-Host "=== vgmstream location ==="
          Get-Command vgmstream-cli | Select-Object -ExpandProperty Source

      - name: Run audio tests
        run: |
          cd unpack
          python tests/test_audio.py