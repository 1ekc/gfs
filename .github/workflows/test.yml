name: Run Audio Script

on:
  workflow_dispatch:
  push:

jobs:
  run-audio:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure system encoding
        run: |
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          chcp 65001 | Out-Null
          git config --global core.quotepath false
          $env:PYTHONUTF8 = "1"
          $env:LC_ALL = "C.UTF-8"

      - name: Install Windows Dependencies
        run: |
          # Установка только необходимых зависимостей
          choco install ffmpeg -y --no-progress
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv

      - name: Install vgmstream (reliable method)
        run: |
          # Создаем директорию для vgmstream
          $vgmDir = "C:\vgmstream"
          New-Item -ItemType Directory -Path $vgmDir -Force

          # Скачиваем и распаковываем vgmstream
          $vgmUrl = "https://github.com/vgmstream/vgmstream/releases/download/r1882/vgmstream-win64.zip"
          Invoke-WebRequest -Uri $vgmUrl -OutFile "$vgmDir\vgmstream.zip"
          Expand-Archive -Path "$vgmDir\vgmstream.zip" -DestinationPath $vgmDir -Force
          Remove-Item -Path "$vgmDir\vgmstream.zip"

          # Добавляем в PATH
          $env:PATH = "$vgmDir;$env:PATH"
          echo "##[add-path]$vgmDir"

          # Проверяем установку
          vgmstream-cli -V
          if ($LASTEXITCODE -ne 0) {
              Write-Host "::error::vgmstream-cli verification failed"
              exit 1
          }

      - name: Setup Python Environment
        run: |
          python -m pip install --upgrade pip
          pip install pdm
          cd unpack
          pdm config venv.in_project true
          pdm install
          .\.venv\Scripts\activate
          pip install -r downloader/requirements.txt

      - name: Verify tools
        run: |
          # Детальная проверка окружения
          Write-Host "=== Tool versions ==="
          ffmpeg -version
          vgmstream-cli -V
          
          Write-Host "=== PATH contents ==="
          $env:PATH -split ';' | Where-Object { $_ -ne '' } | ForEach-Object { Write-Host $_ }

          Write-Host "=== vgmstream location ==="
          Get-Command vgmstream-cli | Select-Object -ExpandProperty Source

      - name: Verify required files
        run: |
          $requiredFiles = @(
              "unpack/downloader/output/AVG.acb.dat",
              "unpack/downloader/output/BGM.acb.dat"
          )

          foreach ($file in $requiredFiles) {
              if (-not (Test-Path $file)) {
                  Write-Host "::error::Missing required file: $file"
                  exit 1
              }
          }

      - name: Run audio tests with debug
        run: |
          cd unpack
          .\.venv\Scripts\activate
          
          # Детальное логирование перед запуском
          Write-Host "=== Files in output directory ==="
          Get-ChildItem -Path "downloader/output" -File | Select-Object Name, Length | Format-Table -AutoSize
          
          # Запуск теста с подробным выводом
          python -v tests/test_audio.py 2>&1 | Tee-Object -FilePath "audio_test.log"
          
          # Проверка результатов
          if ($LASTEXITCODE -ne 0) {
              Get-Content "audio_test.log" | ForEach-Object { Write-Host $_ }
              Write-Host "::error::Audio test failed with exit code $LASTEXITCODE"
              exit 1
          }

          # Проверка выходных файлов
          if (-not (Test-Path "audio/audio.json")) {
              Write-Host "::error::Audio output file not created"
              exit 1
          }