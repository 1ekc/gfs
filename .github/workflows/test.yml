name: Run Audio Script

on:
  workflow_dispatch:
  push:

jobs:
  run-audio:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Configure system encoding
        run: |
          [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          chcp 65001 | Out-Null
          git config --global core.quotepath false
          $env:PYTHONUTF8 = "1"
          $env:LC_ALL = "C.UTF-8"

      - name: Install Windows Dependencies
        run: |
          choco install ffmpeg -y --no-progress
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv

      - name: Install vgmstream (fixed method)
        run: |
          # Устанавливаем в текущую директорию
          $vgmDir = "$PWD\vgmstream"
          New-Item -ItemType Directory -Path $vgmDir -Force

          # Используем стабильную версию
          $vgmUrl = "https://github.com/vgmstream/vgmstream/releases/download/r1882/vgmstream-win64.zip"
          
          # Скачиваем и распаковываем
          try {
              Invoke-WebRequest -Uri $vgmUrl -OutFile "$vgmDir\vgmstream.zip" -ErrorAction Stop
              Expand-Archive -Path "$vgmDir\vgmstream.zip" -DestinationPath $vgmDir -Force
              Remove-Item -Path "$vgmDir\vgmstream.zip" -Force
              
              # Проверяем наличие файла
              if (-not (Test-Path "$vgmDir\vgmstream-cli.exe")) {
                  Write-Host "::error::vgmstream-cli.exe not found in extracted files"
                  Get-ChildItem $vgmDir -Recurse | Format-Table FullName
                  exit 1
              }
              
              # Добавляем в PATH
              $env:PATH = "$vgmDir;$env:PATH"
              echo "$vgmDir" | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8
          } catch {
              Write-Host "::error::Failed to install vgmstream: $($_.Exception.Message)"
              exit 1
          }

      - name: Verify tools
        run: |
          Write-Host "=== Tool versions ==="
          ffmpeg -version
          
          # Проверяем vgmstream
          $vgmPath = "$PWD\vgmstream\vgmstream-cli.exe"
          if (Test-Path $vgmPath) {
              & $vgmPath -V
              if ($LASTEXITCODE -ne 0) {
                  Write-Host "::error::vgmstream-cli returned error code $LASTEXITCODE"
                  exit 1
              }
          } else {
              Write-Host "::error::vgmstream-cli.exe not found at $vgmPath"
              exit 1
          }

      - name: Run audio tests
        run: |
          # Указываем путь к vgmstream через переменную окружения
          $env:VGMSTREAM_PATH = "$PWD\vgmstream\vgmstream-cli.exe"
          cd unpack
          python tests/test_audio.py